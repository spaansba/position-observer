"use strict";const m=e=>e!=null&&typeof e=="object"||!1,p=e=>m(e)&&typeof e.nodeType=="number"&&[1,2,3,4,5,6,7,8,9,10,11].some(t=>e.nodeType===t)||!1,h=e=>p(e)&&e.nodeType===1||!1,w=e=>typeof e=="function"||!1,k="1.0.5",a="PositionObserver Error";class v{entries;static version=k;_tick;_root;_callback;constructor(t,s){if(!w(t))throw new Error(`${a}: ${t} is not a function.`);this.entries=new Map,this._callback=t,this._root=h(s?.root)?s.root:document?.documentElement,this._tick=0}observe=t=>{if(!h(t))throw new Error(`${a}: ${t} is not an instance of Element.`);this._root.contains(t)&&this._new(t).then(s=>{s&&!this.getEntry(t)&&this.entries.set(t,s),this._tick||(this._tick=requestAnimationFrame(this._runCallback))})};unobserve=t=>{this.entries.has(t)&&this.entries.delete(t)};_runCallback=()=>{if(!this.entries.size)return;const t=new Promise(s=>{const r=[];this.entries.forEach(({target:i,boundingClientRect:n})=>{this._root.contains(i)&&this._new(i).then(({boundingClientRect:o,isIntersecting:u})=>{if(!u)return;const{left:f,top:_,bottom:b,right:l}=o;if(n.top!==_||n.left!==f||n.right!==l||n.bottom!==b){const c={target:i,boundingClientRect:o};this.entries.set(i,c),r.push(c)}})}),s(r)});this._tick=requestAnimationFrame(async()=>{const s=await t;s.length&&this._callback(s,this),this._runCallback()})};_new=t=>new Promise(s=>{new IntersectionObserver(([i],n)=>{n.disconnect(),s(i)}).observe(t)});getEntry=t=>this.entries.get(t);disconnect=()=>{cancelAnimationFrame(this._tick),this.entries.clear(),this._tick=0}}module.exports=v;
//# sourceMappingURL=index.cjs.map
